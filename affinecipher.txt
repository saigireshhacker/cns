#include <stdio.h>
#include <string.h>

#define ALPHABET_SIZE 26

// Precomputed modular inverses of numbers that are coprime with 26
int mod_inverse(int a) {
    int inv[26] = {0, 1, 0, 9, 0, 21, 0, 15, 0, 3, 0, 19, 0, 0, 0, 7, 0, 23, 0, 11, 0, 5, 0, 17, 0, 25};
    return inv[a];
}

// Encrypts the input text using Affine Cipher
void encrypt(char *text, int a, int b) {
    for (int i = 0; text[i]; i++) {
        if (text[i] >= 'A' && text[i] <= 'Z') {  
            text[i] = ((a * (text[i] - 'A') + b) % ALPHABET_SIZE) + 'A';
        }
    }
}

// Decrypts the input text using Affine Cipher
void decrypt(char *text, int a, int b) {
    int a_inv = mod_inverse(a);
    for (int i = 0; text[i]; i++) {
        if (text[i] >= 'A' && text[i] <= 'Z') {
            text[i] = ((a_inv * ((text[i] - 'A' - b + ALPHABET_SIZE)) % ALPHABET_SIZE) + 'A');
        }
    }
}

int main() {
    char text[100];
    int a, b, choice;

    printf("Enter UPPERCASE text (A-Z only): ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = 0;

    printf("Enter key values a (must be coprime with 26) and b: ");
    scanf("%d %d", &a, &b);

    printf("Choose:\n1. Encrypt\n2. Decrypt\nEnter your choice: ");
    scanf("%d", &choice);

    if (choice == 1) {
        encrypt(text, a, b);
        printf("Encrypted Text: %s\n", text);
    } else if (choice == 2) {
        decrypt(text, a, b);
        printf("Decrypted Text: %s\n", text);
    } else {
        printf("Invalid choice.\n");
    }

    return 0;
}
  
Enter UPPERCASE text (A-Z only): SAIGIRESH
Enter key values a (must be coprime with 26) and b: 3 5 
Choose:
1. Encrypt
2. Decrypt
Enter your choice: 1
Encrypted Text: HFDXDERHA


=== Code Execution Successful ===