#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Define a substitution key (26 letters)
char key[] = "QWERTYUIOPASDFGHJKLZXCVBNM"; // You can customize this

// Function to encrypt the message
void encrypt(char *msg, char *cipher) {
    for (int i = 0; msg[i] != '\0'; i++) {
        if (isalpha(msg[i])) {
            char base = isupper(msg[i]) ? 'A' : 'a';
            cipher[i] = isupper(msg[i]) ? key[msg[i] - base] : tolower(key[msg[i] - base]);
        } else {
            cipher[i] = msg[i]; // Keep non-alphabet characters
        }
    }
    cipher[strlen(msg)] = '\0';
}

// Function to decrypt the message
void decrypt(char *cipher, char *msg) {
    for (int i = 0; cipher[i] != '\0'; i++) {
        if (isalpha(cipher[i])) {
            char upper = toupper(cipher[i]);
            for (int j = 0; j < 26; j++) {
                if (key[j] == upper) {
                    msg[i] = isupper(cipher[i]) ? 'A' + j : 'a' + j;
                    break;
                }
            }
        } else {
            msg[i] = cipher[i]; // Keep non-alphabet characters
        }
    }
    msg[strlen(cipher)] = '\0';
}

int main() {
    char text[100], result[100];
    int choice;

    printf("Press 1 to Encrypt or 2 to Decrypt: ");
    scanf("%d", &choice);
    getchar(); // clear newline from buffer

    printf("Enter the message: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    if (choice == 1) {
        encrypt(text, result);
        printf("Encrypted text: %s\n", result);
    } else if (choice == 2) {
        decrypt(text, result);
        printf("Decrypted text: %s\n", result);
    } else {
        printf("Invalid choice.\n");
    }

    return 0;
}
